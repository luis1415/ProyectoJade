// file: IbrowOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package ontologias;

import jade.content.onto.*;
import jade.content.schema.*;
import jade.util.leap.HashMap;
import jade.content.lang.Codec;
import jade.core.CaseInsensitiveString;

/** file: IbrowOntology.java
 * @author ontology bean generator
 * @version 2017/05/11, 03:58:52
 */
public class IbrowOntology extends jade.content.onto.Ontology  {
  //NAME
  public static final String ONTOLOGY_NAME = "ibrow";
  // The singleton instance of this ontology
  private static ReflectiveIntrospector introspect = new ReflectiveIntrospector();
  private static Ontology theInstance = new IbrowOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String ESTUDIANTEEVALUADO="Estudianteevaluado";
    public static final String REVISAREVALUACIONESTUDIANTE="Revisarevaluacionestudiante";
    public static final String EVALUACION_ID_ASIGNATURA="id_asignatura";
    public static final String EVALUACION_DESCRIPCION="descripcion";
    public static final String EVALUACION_ESTUDIANTES="estudiantes";
    public static final String EVALUACION_NOTA="nota";
    public static final String EVALUACION="Evaluacion";
    public static final String ESTUDIANTE_ID="id";
    public static final String ESTUDIANTE_NOMBRE="nombre";
    public static final String ESTUDIANTE="Estudiante";
    public static final String ASIGNATURA_CODIGO="codigo";
    public static final String ASIGNATURA_EVALUACIONES="evaluaciones";
    public static final String ASIGNATURA_TEMATICA="tematica";
    public static final String ASIGNATURA="Asignatura";
    public static final String PROFESOR_ID_PROFESOR="id_profesor";
    public static final String PROFESOR_NOMBRE="nombre";
    public static final String PROFESOR="Profesor";
    public static final String ONTOLOGIAEVALUACION_ASIGNATURAS="asignaturas";
    public static final String ONTOLOGIAEVALUACION_PROFESORES="profesores";
    public static final String ONTOLOGIAEVALUACION="Ontologiaevaluacion";

  /**
   * Constructor
  */
  private IbrowOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema ontologiaevaluacionSchema = new ConceptSchema(ONTOLOGIAEVALUACION);
    add(ontologiaevaluacionSchema, ontologias.Ontologiaevaluacion.class);
    ConceptSchema profesorSchema = new ConceptSchema(PROFESOR);
    add(profesorSchema, ontologias.Profesor.class);
    ConceptSchema asignaturaSchema = new ConceptSchema(ASIGNATURA);
    add(asignaturaSchema, ontologias.Asignatura.class);
    ConceptSchema estudianteSchema = new ConceptSchema(ESTUDIANTE);
    add(estudianteSchema, ontologias.Estudiante.class);
    ConceptSchema evaluacionSchema = new ConceptSchema(EVALUACION);
    add(evaluacionSchema, ontologias.Evaluacion.class);

    // adding AgentAction(s)
    AgentActionSchema revisarevaluacionestudianteSchema = new AgentActionSchema(REVISAREVALUACIONESTUDIANTE);
    add(revisarevaluacionestudianteSchema, ontologias.Revisarevaluacionestudiante.class);

    // adding AID(s)

    // adding Predicate(s)
    PredicateSchema estudianteevaluadoSchema = new PredicateSchema(ESTUDIANTEEVALUADO);
    add(estudianteevaluadoSchema, ontologias.Estudianteevaluado.class);


    // adding fields
    ontologiaevaluacionSchema.add(ONTOLOGIAEVALUACION_PROFESORES, profesorSchema, 0, ObjectSchema.UNLIMITED);
    ontologiaevaluacionSchema.add(ONTOLOGIAEVALUACION_ASIGNATURAS, asignaturaSchema, 0, ObjectSchema.UNLIMITED);
    profesorSchema.add(PROFESOR_NOMBRE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    profesorSchema.add(PROFESOR_ID_PROFESOR, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    asignaturaSchema.add(ASIGNATURA_TEMATICA, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    asignaturaSchema.add(ASIGNATURA_EVALUACIONES, evaluacionSchema, ObjectSchema.MANDATORY);
    asignaturaSchema.add(ASIGNATURA_CODIGO, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    estudianteSchema.add(ESTUDIANTE_NOMBRE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    estudianteSchema.add(ESTUDIANTE_ID, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    evaluacionSchema.add(EVALUACION_NOTA, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    evaluacionSchema.add(EVALUACION_ESTUDIANTES, estudianteSchema, 1, 40);
    evaluacionSchema.add(EVALUACION_DESCRIPCION, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    evaluacionSchema.add(EVALUACION_ID_ASIGNATURA, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
  }
